Using TensorFlow backend.
2019-11-15 18:47:17.378738: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_100.dll
Loading Keras model to resume the training
Define Keras model for training/testing
2019-11-15 18:47:19.461906: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library nvcuda.dll
2019-11-15 18:47:19.488746: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 0 with properties:
name: GeForce GTX 1080 major: 6 minor: 1 memoryClockRate(GHz): 1.835
pciBusID: 0000:01:00.0
2019-11-15 18:47:19.494662: I tensorflow/stream_executor/platform/default/dlopen_checker_stub.cc:25] GPU libraries are statically linked, skip dlopen check.
2019-11-15 18:47:19.499789: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1746] Adding visible gpu devices: 0
2019-11-15 18:47:19.502689: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX AVX2
2019-11-15 18:47:19.509271: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 0 with properties:
name: GeForce GTX 1080 major: 6 minor: 1 memoryClockRate(GHz): 1.835
pciBusID: 0000:01:00.0
2019-11-15 18:47:19.514634: I tensorflow/stream_executor/platform/default/dlopen_checker_stub.cc:25] GPU libraries are statically linked, skip dlopen check.
2019-11-15 18:47:19.519912: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1746] Adding visible gpu devices: 0
2019-11-15 18:47:20.099927: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1159] Device interconnect StreamExecutor with strength 1 edge matrix:
2019-11-15 18:47:20.103330: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1165]      0
2019-11-15 18:47:20.105444: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1178] 0:   N
2019-11-15 18:47:20.108734: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1304] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 6354 MB memory) -> physical GPU (device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0, compute capability: 6.1)
Model: "sequential_1"
_________________________________________________________________
Layer (type)                 Output Shape              Param #
=================================================================
flatten_1 (Flatten)          (None, 5120)              0
_________________________________________________________________
dense_1 (Dense)              (None, 1024)              5243904
_________________________________________________________________
dense_2 (Dense)              (None, 512)               524800
_________________________________________________________________
dense_3 (Dense)              (None, 256)               131328
_________________________________________________________________
dense_4 (Dense)              (None, 4)                 1028
=================================================================
Total params: 5,901,060
Trainable params: 5,901,060
Non-trainable params: 0
_________________________________________________________________
None
Loading Keras-RL agent training memory
Loading Keras-RL agent
Traceback (most recent call last):
  File "dqn2048.py", line 288, in <module>
    agent_filename = fnmatch.filter(os.listdir(data_filepath), 'dqn_{}_{}_{}_'.format(ENV_NAME, MODEL_TYPE, PREPROC) + '*_agent.pkl')[-1]
IndexError: list index out of range

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "dqn2048.py", line 303, in <module>
    nb_steps_warmup=NB_STEPS_WARMUP, gamma=.99, target_model_update=TARGET_MODEL_UPDATE, train_interval=4, delta_clip=1.) #, batch_size=BATCH_SIZE)
  File "C:\Users\Moritz\Anaconda3\envs\DeepLearning2048\lib\site-packages\rl\agents\dqn.py", line 108, in __init__
    if hasattr(model.output, '__len__') and len(model.output) > 1:
  File "C:\Users\Moritz\Anaconda3\envs\DeepLearning2048\lib\site-packages\tensorflow_core\python\framework\ops.py", line 741, in __len__
    "shape information.".format(self.name))
TypeError: len is not well defined for symbolic Tensors. (dense_4/BiasAdd:0) Please call `x.shape` rather than `len(x)` for shape information.